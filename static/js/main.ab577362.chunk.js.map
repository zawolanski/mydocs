{"version":3,"sources":["components/Button/index.tsx","pages/Home/App.tsx","pages/Root/index.tsx","localization/i18n.ts","index.tsx"],"names":["Button","type","App","useTranslation","t","className","href","target","rel","Root","index","element","i18n","use","Backend","I18nextBrowserLanguageDetector","initReactI18next","init","backend","loadPath","process","allowMultiLoading","fallbackLng","lowerCaseLng","load","ReactDOM","render","fallback","StrictMode","document","getElementById"],"mappings":"0MAMeA,EANA,kBACb,8BACE,wBAAQC,KAAK,SAAb,0B,QCwBWC,EAvBH,WACV,MAAYC,YAAe,WAApBC,EAAP,oBAEA,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sCACO,+CADP,0BAGA,mBACEA,UAAU,WACVC,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,SAMGJ,EAAE,WAEL,cAAC,EAAD,U,eCTOK,EARF,kBACX,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAAC,EAAD,W,uCCD5BC,IACGC,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,QAAS,CACPC,SAAS,GAAD,OAAKC,UAAL,oCACRC,mBAAmB,GAErBC,YAAa,QACbC,cAAc,EACdC,KAAM,gBAGKZ,EAAf,ECbAa,IAASC,OACP,cAAC,WAAD,CAAUC,SAAS,UAAnB,SACE,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.ab577362.chunk.js","sourcesContent":["const Button = () => (\r\n  <div>\r\n    <button type=\"button\">Click me!</button>\r\n  </div>\r\n);\r\n\r\nexport default Button;\r\n","import Button from '@components/Button';\nimport { useTranslation } from 'react-i18next';\n\nconst App = (): JSX.Element => {\n  const [t] = useTranslation('content');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('learn')}\n        </a>\n        <Button />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","import App from '@pages/Home/App';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\n\r\nconst Root = () => (\r\n  <Router>\r\n    <Routes>\r\n      <Route index element={<App />} />\r\n    </Routes>\r\n  </Router>\r\n);\r\n\r\nexport default Root;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport I18nextBrowserLanguageDetector from 'i18next-browser-languagedetector';\r\nimport Backend from 'i18next-http-backend';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(I18nextBrowserLanguageDetector)\r\n  .use(initReactI18next)\r\n  .init({\r\n    backend: {\r\n      loadPath: `${process.env.PUBLIC_URL}/src/locales/{{lng}}/{{ns}}.json`,\r\n      allowMultiLoading: true,\r\n    },\r\n    fallbackLng: 'en-us',\r\n    lowerCaseLng: true,\r\n    load: 'currentOnly',\r\n  });\r\n\r\nexport default i18n;\r\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from '@pages/Root';\nimport '@/index.css';\nimport '@/localization/i18n';\n\nReactDOM.render(\n  <Suspense fallback=\"loading\">\n    <React.StrictMode>\n      <Root />\n    </React.StrictMode>\n  </Suspense>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}